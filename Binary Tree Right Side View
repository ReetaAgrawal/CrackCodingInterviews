/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    TreeMap<Integer, Integer> map = new TreeMap<>();
    public List<Integer> rightSideView(TreeNode root) {
        getView(root, 1);
        List<Integer> output = new ArrayList<>(map.values());
        return output;
    }

    private void getView(TreeNode root, int level) {
        if(root == null) {
            return;
        }

        getView(root.right, level+1);
        if(!map.containsKey(level)) {
            map.put(level, root.val);
        }
        getView(root.left, level+1);
        if(!map.containsKey(level)) {
            map.put(level, root.val);
        }
    }
}
